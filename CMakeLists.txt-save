cmake_minimum_required(VERSION 3.5)

project(dvkbuntu-easy-menu-qt LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall -O2")
set(CMAKE_BUILD_RPATH "'\$$ORIGIN'")
set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
set(BUILD_SHARED_LIBS OFF)
set(CMAKE_EXE_LINKER_FLAGS "-static")

find_package(Qt5 COMPONENTS Core REQUIRED)
find_package(Qt5 COMPONENTS Gui REQUIRED)
find_package(Qt5 COMPONENTS Svg REQUIRED)
find_package(Qt5 COMPONENTS WebEngineWidgets REQUIRED)
find_package(Qt5 COMPONENTS Multimedia REQUIRED)
find_package(Qt5 COMPONENTS Widgets REQUIRED)

set(PROJECT_SOURCES
        src/main.cpp
        src/mainwindow.cpp
        src/mainwindow.h
        src/mainwindow.ui
        src/controlmenu.cpp
        src/controlmenu.h
        src/controlmenu.ui
        src/controlmenumain.cpp
        src/controlmenumain.h
        src/controlmenumain.ui
        src/options.cpp
        src/options.h
        src/options.ui
        src/resource.qrc
)

if(5 GREATER_EQUAL 6)
    qt_add_executable(dvkbuntu-easy-menu-qt
        ${PROJECT_SOURCES}
    )
else()
    if(ANDROID)
        add_library(dvkbuntu-easy-menu-qt SHARED
            ${PROJECT_SOURCES}
        )
    else()
        add_executable(dvkbuntu-easy-menu-qt
            ${PROJECT_SOURCES}
        )
    endif()
endif()

target_link_libraries(dvkbuntu-easy-menu-qt
        Qt5::Core
        Qt5::Gui
        Qt5::Svg
        Qt5::WebEngineWidgets
        Qt5::Multimedia
        Qt5::Widgets)
